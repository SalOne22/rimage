name: deploy

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  actions: read
  contents: write

jobs:
  deploy:
    name: deploy release
    runs-on: ubuntu-latest

    if: ${{ !github.event.repository.fork }}

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Get the rimage version 🪶
        id: rimage-meta
        run:
          echo "version=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[] | select(.name == "rimage").version')"
          >> "$GITHUB_OUTPUT"

      - name: Retrieve ${{ matrix.target }} binary 🔃
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: rimage.yml
          commit: ${{ github.sha }}
          name: rimage binary (${{ matrix.target }})
          path: target

      - name: Build archives 🏗
        working-directory: target
        run: |
          ARCHIVE_NAME="rimage-${{ steps.rimage-meta.outputs.version }}-${{ matrix.target }}"

          mkdir "$ARCHIVE_NAME"
          cp ../CHANGELOG.md ../README.md "$ARCHIVE_NAME"

          case '${{ matrix.target }}' in
            *-windows-*)
              cp ../LICENSE-APACHE "$ARCHIVE_NAME/LICENSE-APACHE.txt"
              cp ../LICENSE-MIT "$ARCHIVE_NAME/LICENSE-MIT.txt"
              cp rimage.exe "$ARCHIVE_NAME"
              zip "${ARCHIVE_NAME}.zip" "$ARCHIVE_NAME"/*;;
            *)
              cp ../LICENSE-APACHE ../LICENSE-MIT "$ARCHIVE_NAME"
              cp rimage "$ARCHIVE_NAME"
              tar -vczf "${ARCHIVE_NAME}.tar.gz" "$ARCHIVE_NAME"/*;;
          esac

      - name: Create release notes 📑
        run: tail -n +5 CHANGELOG.md | sed -e '/## \[v/,$d' > RELEASE_NOTES.txt

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.rimage-meta.outputs.version }}
          body_path: RELEASE_NOTES.txt
          files: |
            target/*.zip
            target/*.tar.gz
